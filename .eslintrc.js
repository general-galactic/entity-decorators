/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": require('path').resolve( __dirname, './tsconfig.json'),
        "sourceType": "module"
    },
    "plugins": [
        "eslint-plugin-jsdoc",
        "eslint-plugin-prefer-arrow",
        "@typescript-eslint"
    ],
    "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
        "no-trailing-spaces": "error",
        "padded-blocks": "off",
        "semi": ["error", "never"] ,
        "semi-spacing": ["error", {"before": false, "after": true}],
        "space-before-blocks": "error",
        "quotes": ["error", "single", { "avoidEscape": true, "allowTemplateLiterals": true }],
        "comma-dangle": "off",
        "complexity": "warn",
        "eqeqeq": [
            "error",
            "smart"
        ],
        "no-underscore-dangle": "off",
        "one-var": [
            "error",
            "never"
        ]
    }
};
